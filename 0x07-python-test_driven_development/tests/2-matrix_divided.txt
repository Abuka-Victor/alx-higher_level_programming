The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

Import the function:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Check that Module Doc Exists:
    >>> m = __import__('2-matrix_divided').__doc__
    >>> type(m)
    <class 'str'>

Check Module Doc string:
    >>> len(m) > 1
    True

Check that Module Function Doc Exists:
    >>> f = __import__('2-matrix_divided').matrix_divided.__doc__
    >>> type(f)
    <class 'str'>

Check Module Function Doc string:
    >>> len(f) > 1
    True

Check that function works for int and float values:
    >>> matrix_divided([[2, 4], [4, 2]], 2)
    [[1.0, 2.0], [2.0, 1.0]]
    >>> matrix_divided([[3.6, 5.8], [5.8, 3.6]], 2.6)
    [[1.38, 2.23], [2.23, 1.38]]

Check for positive and negative values:
    >>> matrix_divided([[2, -4], [-4, 2]], 2)
    [[1.0, -2.0], [-2.0, 1.0]]
    >>> matrix_divided([[2, -4], [-4, 2]], -2)
    [[-1.0, 2.0], [2.0, -1.0]]
    >>> matrix_divided([[-2, 4], [4, -2]], -2)
    [[1.0, -2.0], [-2.0, 1.0]]
    >>> matrix_divided([[-2, -4], [-4, -2]], -2)
    [[1.0, 2.0], [2.0, 1.0]]

Check that TypeError is thrown when size is not same:
    >>> matrix_divided([[1, 2, 3], [-4, 2]], 2)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size


Check that TypeError is thrown when type is not int or float:
    >>> matrix_divided([[1, "Hey"], [-4, 2]], 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Check for empty function call:
    >>> matrix_divided()
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'


